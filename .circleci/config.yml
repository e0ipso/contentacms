jobs:
  build:
    docker:
    - {image: 'circleci/php:7.0.11'}
    environment: {BASH_ENV: ~/.bashrc, BRANCH: '$(echo $CIRCLE_BRANCH | grep -v ''^\(master\|[0-9]\+.x\)$'')',
      CIRCLE_ENV: ci-$CIRCLE_BUILD_NUM, DEFAULT_ENV: '$(echo ${PR_ENV:-$CIRCLE_ENV}
        | tr ''[:upper:]'' ''[:lower:]'' | sed ''s/[^0-9a-z-]//g'' | cut -c -11 |
        sed ''s/-$//'')', NOTIFY: 'scripts/github/add-commit-comment {project} {sha}
        "Created multidev environment [{site}#{env}]({dashboard-url})." {site-url}',
      PATH: '$PATH:~/bin:tests/scripts', PR_ENV: '${BRANCH:+pr-$BRANCH}', TERMINUS_ENV: '${TERMINUS_ENV:-$DEFAULT_ENV}',
      TZ: /usr/share/zoneinfo/America/Los_Angeles}
    steps:
    - checkout
    - {run: 'echo "Begin build for $CIRCLE_ENV${PR_ENV:+ for }$PR_ENV. Pantheon test
        environment is $TERMINUS_SITE.$TERMINUS_ENV"'}
    - {run: "if [ -n \"$GITHUB_TOKEN\" ] ; then\n  composer config --global github-oauth.github.com\
        \ $GITHUB_TOKEN\nfi\n"}
    - {run: git config --global user.email "$GIT_EMAIL"}
    - {run: git config --global user.name "Circle CI"}
    - {key: 'composer-cache-{{ checksum "package.json" }}', restore_cache: null}
    - {command: 'composer global require -n "hirak/prestissimo:^0.3"', name: install-prestissimo,
      run: null}
    - {command: 'composer global require -n "hirak/prestissimo:^0.3"', name: install-prestissimo,
      run: null}
    - {command: 'composer global require -n "hirak/prestissimo:^0.3"', name: install-prestissimo,
      run: null}
    - {command: /usr/bin/env COMPOSER_BIN_DIR=$HOME/bin composer --working-dir=$HOME
        require pantheon-systems/terminus "^1", name: install-terminus, run: null}
    - {command: terminus --version, name: terminus-version, run: null}
    - {command: /usr/bin/env COMPOSER_BIN_DIR=$HOME/bin composer --working-dir=$HOME
        require drush/drush "^8", name: install-drush, run: null}
    - {command: mkdir -p ~/.terminus/plugins, name: create-terminus-directory, run: null}
    - {command: 'composer create-project -n -d ~/.terminus/plugins pantheon-systems/terminus-build-tools-plugin:^1',
      name: install-terminus-plugins, run: null}
    - {command: 'composer create-project -n -d ~/.terminus/plugins pantheon-systems/terminus-secrets-plugin:^1',
      name: install-terminus-secrets, run: null}
    - key: composer-cache-{{ checksum "package.json" }}
      paths: [~/.composer/cache]
      save_cache: null
    - {command: 'terminus auth:login -n --machine-token="$TERMINUS_TOKEN"', name: login-pantheon,
      run: null}
    - {command: 'terminus build:env:delete:ci -n "$TERMINUS_SITE" --keep=2 --yes',
      name: delete-existing-environment, run: null}
    - {run: composer -n build-assets}
    - {run: 'terminus env:wake -n "$TERMINUS_SITE.dev"'}
    - {command: 'terminus build:env:create -n "$TERMINUS_SITE.dev" "$TERMINUS_ENV"
        --yes --notify="$NOTIFY"', name: create-multidev, run: null}
    - {command: 'terminus build:env:site-install contenta_jsonapi -n "$TERMINUS_SITE.$TERMINUS_ENV"
        --site-name="$TEST_SITE_NAME" --account-mail="$ADMIN_EMAIL" --account-pass="$ADMIN_PASSWORD"',
      name: install-drupal, run: null}
    - build-assets:
        branch: master
        commands: ['terminus build:env:merge -n "$TERMINUS_SITE.$TERMINUS_ENV" --yes',
          terminus drush -n $TERMINUS_SITE.dev -- updatedb --yes, '[ ! -f "config/system.site.yml"
            ] || terminus drush "$TERMINUS_SITE.dev" -- config-import --yes

            ', 'terminus build:env:delete:pr -n "$TERMINUS_SITE" --yes']
      deploy: null
    working_directory: ~/contentacms
version: 2
